{"version":3,"file":"vwo-fme-react-sdk.umd.production.min.js","sources":["../lib/services/LoggerService.ts","../lib/enum/LogMessageEnum.ts","../lib/utils/LogMessageUtil.ts","../lib/enum/HookEnum.ts","../lib/VWOContext.ts","../lib/useVWOClient.ts","../lib/VWOProvider.tsx","../lib/useGetFlag.ts","../lib/useGetFlagVariable.ts","../lib/useSetAttribute.ts","../lib/useTrackEvent.ts"],"sourcesContent":["/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * logger.ts - Global Logger Singleton\n */\nimport { LogManager } from '@wingify/service-logger';\n\nlet logger: LogManager | null = null;\n\n/**\n * Initializes the global logger instance.\n * This function should be called inside `VWOProvider` before logging is used anywhere in the application.\n *\n * @param {object} config - The logger configuration object.\n * @param {object} config.logger - Optional logging configuration (e.g., log level, transports).\n * @returns {void} No return value; initializes the logger instance.\n */\nexport function initLogger(config: any) {\n  if (!logger) {\n    logger = new LogManager(config?.logger || {});\n  }\n  return logger;\n}\n\n/**\n * Retrieves the global logger instance.\n * Ensures that `initLogger` has been called before attempting to use logging.\n *\n * @returns {LogManager} The global logger instance.\n */\nexport function getLogger(): LogManager {\n  if (!logger) {\n    logger = new LogManager({ level: 'error' });\n  }\n  return logger;\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum LogMessageEnum {\n  // common messages\n  VWO_CLIENT_MISSING = 'VWO Client is missing in {hookName} hook. Ensure VWOProvider is correctly initialized.',\n  INVALID_CONTEXT = 'Invalid user context in {hookName} hook. Ensure a valid userContext is provided.',\n  HOOK_ERROR = 'Error in {hookName} hook: {error}',\n  INVALID_HOOK_USAGE = '{hookName} must be used within a VWOProvider !!',\n\n  // VWO Provider Messages\n  VWO_PROVIDER_CLIENT_CONFIG_WARNING = 'VWOProvider Warning: Both `client` and `config` are provided. The `client` prop will take precedence, and the `config` props will be disregarded.',\n  VWO_PROVIDER_CONFIG_REQUIRED = 'VWOProvider Error: Either `client` or `config` must be provided.',\n  VWO_SDK_INITIALIZATION_FAILED = 'VWO-SDK Initialization failed: {error}',\n\n  // useTrackEvent Messages\n  VWO_TRACK_EVENT_NAME_REQUIRED = 'Event name is required for useTrackEvent hook and it should be a string',\n  VWO_TRACK_EVENT_ERROR = 'Error tracking event - {eventName}: {error}',\n\n  // useSetAttribute Messages\n  VWO_SET_ATTRIBUTE_MAP_REQUIRED = 'attributeMap (object having key-value pairs of user attributes) is required for useSetAttribute hook',\n  VWO_SET_ATTRIBUTE_ERROR = 'Error setting attributes: {error}',\n  VWO_SET_ATTRIBUTE_SUCCESS = 'User attributes set: {attributes}',\n\n  // useGetFlag Messages\n  VWO_NOT_READY_IN_USE_GET_FLAG = 'VWO is not ready in useGetFlag hook',\n  VWO_GET_FLAG_FEATURE_KEY_REQUIRED = 'Feature key is required for useGetFlag hook',\n  VWO_GET_FLAG_ERROR = 'Error fetching feature flag - {featureKey}: {error}',\n\n  // useGetFlagVariable Messages\n  VWO_GET_FLAG_VARIABLES_FLAG_REQUIRED = 'Flag is required for useGetFlagVariables hook and should be an object',\n  VWO_GET_FLAG_VARIABLES_ERROR = 'Error getting flag variables: {error}',\n  VWO_GET_FLAG_VARIABLE_REQUIRED = 'Flag and variable key are required for useGetFlagVariable hook',\n  VWO_GET_FLAG_VARIABLE_ERROR = 'Error getting flag variable: {error}',\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isFunction } from '@wingify/util-data-type';\n\nconst nargs = /\\{([0-9a-zA-Z_]+)\\}/g;\n\n/**\n * Constructs a message by replacing placeholders in a template with corresponding values from a data object.\n *\n * @param {string} template - The message template containing placeholders in the format `{key}`.\n * @param {Record<string, any>} data - An object containing keys and values used to replace the placeholders in the template.\n * @returns {string} The constructed message with all placeholders replaced by their corresponding values from the data object.\n */\nexport function buildMessage(template: string, data: Record<string, any> = {}): string {\n  try {\n    return template.replace(nargs, (match, key, index) => {\n      // Check for escaped placeholders\n      if (template[index - 1] === '{' && template[index + match.length] === '}') {\n        return key;\n      }\n\n      // Retrieve the value from the data object\n      const value = data[key];\n\n      // If the key does not exist or the value is null/undefined, return an empty string\n      if (value === undefined || value === null) {\n        return '';\n      }\n\n      // If the value is a function, evaluate it\n      return isFunction(value) ? value() : value;\n    });\n  } catch (err) {\n    return template; // Return the original template in case of an error\n  }\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum HookEnum {\n  VWO_CLIENT = 'useVWOClient',\n  VWO_CONTEXT = 'useVWOContext',\n  VWO_GET_FLAG = 'useGetFlag',\n  VWO_GET_FLAG_VARIABLE = 'useGetFlagVariable',\n  VWO_GET_FLAG_VARIABLES = 'useGetFlagVariables',\n  VWO_TRACK_EVENT = 'useTrackEvent',\n  VWO_SET_ATTRIBUTE = 'useSetAttribute',\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContext, useContext } from 'react';\nimport { getLogger } from './services/LoggerService';\nimport { IVWOClient, IVWOContextModel } from 'vwo-fme-node-sdk';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage } from './utils/LogMessageUtil';\nimport { HookEnum } from './enum/HookEnum';\ninterface VWOContextType {\n  vwoClient: IVWOClient | null;\n  userContext?: IVWOContextModel | null;\n  setUserContext?: (context: IVWOContextModel) => void;\n  isReady?: boolean;\n}\n\nexport const VWOContext = createContext<VWOContextType>({\n  vwoClient: null,\n  userContext: null,\n  setUserContext: undefined,\n  isReady: false,\n});\n\nexport const useVWOContext = (): VWOContextType | null => {\n  const logger = getLogger();\n  try {\n    // Fetch the context\n    const context = useContext(VWOContext);\n\n    // If the context is not found, throw an error\n    if (!context) {\n      logger.error(buildMessage(LogMessageEnum.INVALID_HOOK_USAGE, { hookName: HookEnum.VWO_CONTEXT }));\n      return null;\n    }\n    return context;\n  } catch (error) {\n    logger.error(buildMessage(LogMessageEnum.HOOK_ERROR, { error, hookName: HookEnum.VWO_CONTEXT }));\n    return null;\n  }\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IVWOClient } from 'vwo-fme-node-sdk';\nimport { getLogger } from './services/LoggerService';\nimport { useVWOContext } from './VWOContext';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage } from './utils/LogMessageUtil';\nimport { HookEnum } from './enum/HookEnum';\nconst defaultVwoClientResult: VWOClientResult = {\n  vwoClient: null,\n  isReady: false,\n};\n\nexport interface VWOClientResult {\n  vwoClient: IVWOClient | null;\n  isReady: boolean;\n}\n\n/**\n * Returns the VWO SDK client instance\n * @returns VWO SDK client instance\n */\nexport const useVWOClient = (): VWOClientResult => {\n  const logger = getLogger();\n\n  try {\n    const context = useVWOContext();\n\n    if (!context) {\n      logger.error(buildMessage(LogMessageEnum.INVALID_HOOK_USAGE, { hookName: HookEnum.VWO_CLIENT }));\n      return defaultVwoClientResult;\n    }\n\n    if (!context.isReady) {\n      return defaultVwoClientResult;\n    }\n\n    return {\n      vwoClient: context.vwoClient,\n      isReady: true,\n    };\n  } catch (error) {\n    logger.error(buildMessage(LogMessageEnum.HOOK_ERROR, { error, hookName: HookEnum.VWO_CLIENT }));\n    return defaultVwoClientResult;\n  }\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState, ReactNode, useMemo } from 'react';\nimport { init, IVWOContextModel, IVWOClient, IVWOOptions } from 'vwo-fme-node-sdk';\nimport { VWOContext } from './VWOContext';\nimport { initLogger } from './services/LoggerService';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage } from './utils/LogMessageUtil';\n\nexport interface VWOProviderWithClient {\n  client: IVWOClient;\n  userContext?: IVWOContextModel;\n  children: ReactNode;\n  fallbackComponent?: ReactNode;\n}\n\nexport interface VWOProviderWithConfig {\n  config: IVWOOptions;\n  userContext?: IVWOContextModel;\n  children: ReactNode;\n  fallbackComponent?: ReactNode;\n}\n\nexport type IVWOProvider = VWOProviderWithClient | VWOProviderWithConfig;\n\n/**\n * VWOProvider component to provide VWO client and configuration context to child components.\n * \n * @param props - The props for the VWOProvider component.\n * @returns A React element that provides the VWO client and configuration context to child components.\n */\nexport function VWOProvider(props: IVWOProvider): React.ReactElement {\n  const { userContext, children, fallbackComponent } = props;\n  const client = 'client' in props ? props.client : null;\n  const config = 'config' in props ? props.config : null;\n  \n  const [vwoClient, setVwoClient] = useState<IVWOClient | null>(client || null);\n  const [context, setContext] = useState<IVWOContextModel | null>(userContext || null);\n  const [isReady, setIsReady] = useState<boolean>(false);\n\n  const logger = initLogger(client?.options || config);\n  const memoizedConfig = useMemo(() => config || client?.options, []);\n\n  // Initialize the VWO SDK instance only once when the component mounts or if config is updated\n  useEffect(() => {\n    if(config && vwoClient) {\n      logger.warn(LogMessageEnum.VWO_PROVIDER_CLIENT_CONFIG_WARNING);\n    }\n    if (vwoClient) {\n      setIsReady(true);\n      return;\n    } else if (!config) {\n      logger.error(LogMessageEnum.VWO_PROVIDER_CONFIG_REQUIRED);\n      return;\n    }\n\n    const initializeVWO = async () => {\n      try {\n        if (!vwoClient && config) {\n          // Initialize the VWO SDK instance if vwoClient is not already initialized\n          const instance = await init(config);\n          setVwoClient(instance);\n          setIsReady(true);\n        }\n      } catch (error) {\n        logger.error(buildMessage(LogMessageEnum.VWO_SDK_INITIALIZATION_FAILED, { error }));\n      }\n    };\n\n    // Only initialize once\n    if (!vwoClient && config) {\n      initializeVWO();\n    }\n  }, [memoizedConfig]); // Re-run only when config changes\n\n  return (\n    <VWOContext.Provider value={{ vwoClient, userContext: context, setUserContext: setContext, isReady }}>\n      {fallbackComponent && !isReady ? fallbackComponent : children}\n    </VWOContext.Provider>\n  );\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useVWOContext } from './VWOContext';\nimport { getLogger } from './services/LoggerService';\nimport { isObject } from '@wingify/util-data-type';\nimport { Flag, IVWOContextModel } from 'vwo-fme-node-sdk';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage } from './utils/LogMessageUtil';\nimport { HookEnum } from './enum/HookEnum';\nexport interface IFlag {\n  flag: Flag;\n  isReady: boolean;\n}\n\nconst createDefaultFlag = () =>\n  ({\n    isEnabled: () => false,\n    getVariables: (): unknown[] => [],\n    getVariable: <T = unknown>(key: string, defaultValue?: T) => defaultValue,\n  }) as unknown as Flag;\n\n/**\n * Custom hook to retrieve a feature flag using VWO client.\n *\n * @param {string} featureKey - The key of the feature flag to retrieve.\n * @param {Object} [context] - Optional user context to use for fetching the flag.\n * @returns {FlagResult} An object containing the flag and a readiness status.\n */\nexport const useGetFlag = (featureKey: string, context?: IVWOContextModel): IFlag => {\n  const defaultFlagResult: IFlag = {\n    flag: createDefaultFlag(),\n    isReady: false,\n  };\n  const { vwoClient, userContext, setUserContext, isReady } = useVWOContext();\n  const [flag, setFlag] = useState<Flag>(defaultFlagResult.flag);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const logger = getLogger();\n\n  const stableUserContext = useMemo(() => {\n    return (context || userContext || {}) as IVWOContextModel;\n  }, [JSON.stringify(context || userContext || {})]);\n\n  const getFlag = useCallback(async () => {\n    try {\n      if (!isReady) {\n        logger.error(LogMessageEnum.VWO_NOT_READY_IN_USE_GET_FLAG);\n        return;\n      }\n\n      const result = await vwoClient.getFlag(featureKey, stableUserContext);\n      setFlag(result);\n\n      setUserContext(stableUserContext);\n    } catch (error) {\n      logger.error(\n        buildMessage(LogMessageEnum.VWO_GET_FLAG_ERROR, {\n          featureKey,\n          error,\n        }),\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  }, [featureKey, stableUserContext, isReady]);\n\n  useEffect(() => {\n    if (!featureKey) {\n      logger.error(LogMessageEnum.VWO_GET_FLAG_FEATURE_KEY_REQUIRED);\n      return;\n    }\n\n    if (!isObject(stableUserContext) || !stableUserContext.id) {\n      logger.error(buildMessage(LogMessageEnum.INVALID_CONTEXT, { hookName: HookEnum.VWO_GET_FLAG }));\n      return;\n    }\n    // Check if all required dependencies are available\n    // stableUserContext && stableUserContext.id - check is added to handle the case where VWOProvider is not initialized\n    if (isReady && vwoClient && stableUserContext) {\n      getFlag();\n    }\n  }, [featureKey, JSON.stringify(stableUserContext), isReady]);\n\n  return {\n    flag,\n    isReady: !isLoading && !!flag,\n  };\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isObject } from '@wingify/util-data-type';\nimport { getLogger } from './services/LoggerService';\nimport { Flag } from 'vwo-fme-node-sdk';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage } from './utils/LogMessageUtil';\n\n/**\n * Hook to get all variables from a flag\n * @param flag - The flag to get the variables from\n * @returns The variables from the flag\n */\nexport const useGetFlagVariables = (flag: Flag): Array<Record<string, unknown>> => {\n  const logger = getLogger();\n  try {\n    if (!flag || !isObject(flag)) {\n      logger.error(LogMessageEnum.VWO_GET_FLAG_VARIABLES_FLAG_REQUIRED);\n      return [];\n    }\n\n    return flag.getVariables();\n  } catch (error) {\n    logger.error(buildMessage(LogMessageEnum.VWO_GET_FLAG_VARIABLES_ERROR, { error }));\n    return [];\n  }\n};\n\n/**\n * Hook to get a flag variable\n * @param flag - The flag to get the variable from\n * @param variableKey - The key of the variable to get\n * @param defaultValue - The default value to return if the variable is not found\n * @returns The value of the variable\n */\nexport const useGetFlagVariable = <T>(flag: Flag, variableKey: string, defaultValue: T): T => {\n  const logger = getLogger();\n  try {\n    if (!flag || !isObject(flag)) {\n      return defaultValue;\n    }\n\n    if (!variableKey) {\n      logger.error(LogMessageEnum.VWO_GET_FLAG_VARIABLE_REQUIRED);\n      return defaultValue;\n    }\n\n    return flag.getVariable(variableKey, defaultValue);\n  } catch (error) {\n    logger.error(buildMessage(LogMessageEnum.VWO_GET_FLAG_VARIABLE_ERROR, { error }));\n    return defaultValue;\n  }\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useVWOContext } from './VWOContext';\nimport { isObject } from '@wingify/util-data-type';\nimport { getLogger } from './services/LoggerService';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage } from './utils/LogMessageUtil';\nimport { HookEnum } from './enum/HookEnum';\n\n/**\n * Interface for the return type of useSetAttribute hook\n */\nexport interface ISetAttribute {\n  setAttribute: (attributeMap: Record<string, string | number | boolean>) => void;\n  isReady: boolean;\n}\n\n/**\n * Hook to return a function for setting user attributes.\n * @returns {ISetAttribute} Object containing setAttribute function and isReady boolean\n */\nexport const useSetAttribute = (): ISetAttribute => {\n  const logger = getLogger();\n\n  // Fetch the vwoClient and userContext from the context\n  const { vwoClient, userContext, isReady } = useVWOContext();\n\n  /**\n   * Function to set user attributes dynamically\n   * @param attributeMap - The map of attributes to set\n   */\n  const setAttribute = (attributeMap: Record<string, string | number | boolean>): void => {\n    // Return a no-op function if vwoClient or userContext is not available\n    if (!isReady) {\n      logger.error(buildMessage(LogMessageEnum.VWO_CLIENT_MISSING, { hookName: HookEnum.VWO_SET_ATTRIBUTE }));\n      return;\n    }\n    if (!userContext || !isObject(userContext) || !userContext.id) {\n      logger.error(buildMessage(LogMessageEnum.INVALID_CONTEXT, { hookName: HookEnum.VWO_SET_ATTRIBUTE }));\n      return;\n    }\n    if (!attributeMap || !isObject(attributeMap) || Object.keys(attributeMap).length === 0) {\n      logger.error(LogMessageEnum.VWO_SET_ATTRIBUTE_MAP_REQUIRED);\n      return;\n    }\n\n    try {\n      vwoClient.setAttribute(attributeMap, userContext); // Set the attributes\n      logger.info(\n        buildMessage(LogMessageEnum.VWO_SET_ATTRIBUTE_SUCCESS, {\n          attributes: JSON.stringify(attributeMap),\n        }),\n      );\n    } catch (error) {\n      logger.error(buildMessage(LogMessageEnum.VWO_SET_ATTRIBUTE_ERROR, { error }));\n    }\n  };\n\n  return { setAttribute, isReady };\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getLogger } from './services/LoggerService';\nimport { useVWOContext } from './VWOContext';\nimport { isObject, isString } from '@wingify/util-data-type';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage } from './utils/LogMessageUtil';\nimport { HookEnum } from './enum/HookEnum';\n/**\n * Interface for the return type of useTrackEvent hook\n */\nexport interface ITrackEvent {\n  trackEvent: (\n    eventName: string,\n    eventProperties?: Record<string, string | number | boolean>,\n  ) => Promise<Record<string, boolean>>;\n  isReady: boolean;\n}\n\n/**\n * Hook to provide the trackEvent function for tracking events.\n * @returns {ITrackEvent} Object containing trackEvent function and isReady boolean\n */\nexport const useTrackEvent = (): ITrackEvent => {\n  const logger = getLogger();\n\n  // Fetch the vwoClient and userContext from the context\n  const { vwoClient, userContext, isReady } = useVWOContext();\n\n  /**\n   * trackEvent function to be returned by the hook\n   * @param eventName - The name of the event to track\n   * @param eventProperties - The properties of the event (optional)\n   */\n  const trackEvent = async (\n    eventName: string,\n    eventProperties: Record<string, string | number | boolean> = {},\n  ): Promise<Record<string, boolean>> => {\n    if (!isReady) {\n      logger.error(buildMessage(LogMessageEnum.VWO_CLIENT_MISSING, { hookName: HookEnum.VWO_TRACK_EVENT }));\n      return Promise.resolve({});\n    }\n    if (!eventName || !isString(eventName)) {\n      logger.error(LogMessageEnum.VWO_TRACK_EVENT_NAME_REQUIRED);\n      return Promise.resolve({});\n    }\n\n    // Ensure userContext is valid\n    if (!userContext || !isObject(userContext) || !userContext.id) {\n      logger.error(buildMessage(LogMessageEnum.INVALID_CONTEXT, { hookName: HookEnum.VWO_TRACK_EVENT }));\n      return Promise.resolve({});\n    }\n\n    try {\n      return await vwoClient.trackEvent(eventName, userContext, eventProperties);\n    } catch (error) {\n      logger.error(\n        buildMessage(LogMessageEnum.VWO_TRACK_EVENT_ERROR, {\n          eventName,\n          error: error instanceof Error ? error.message : error,\n        }),\n      );\n      return Promise.resolve({});\n    }\n  };\n\n  return { trackEvent, isReady };\n};\n"],"names":["logger","initLogger","config","LogManager","getLogger","level","LogMessageEnum","nargs","buildMessage","template","data","replace","match","key","index","length","value","isFunction","err","HookEnum","VWOContext","createContext","vwoClient","userContext","setUserContext","undefined","isReady","useVWOContext","useContext","error","INVALID_HOOK_USAGE","hookName","VWO_CONTEXT","HOOK_ERROR","defaultVwoClientResult","props","children","fallbackComponent","client","setVwoClient","useState","context","setContext","setIsReady","options","memoizedConfig","useMemo","useEffect","warn","VWO_PROVIDER_CLIENT_CONFIG_WARNING","async","instance","init","VWO_SDK_INITIALIZATION_FAILED","initializeVWO","VWO_PROVIDER_CONFIG_REQUIRED","React","Provider","useGetFlag","featureKey","flag","setFlag","isEnabled","getVariables","getVariable","defaultValue","isLoading","setIsLoading","stableUserContext","JSON","stringify","getFlag","useCallback","VWO_NOT_READY_IN_USE_GET_FLAG","result","VWO_GET_FLAG_ERROR","isObject","id","INVALID_CONTEXT","VWO_GET_FLAG","VWO_GET_FLAG_FEATURE_KEY_REQUIRED","useGetFlagVariable","variableKey","VWO_GET_FLAG_VARIABLE_REQUIRED","VWO_GET_FLAG_VARIABLE_ERROR","VWO_GET_FLAG_VARIABLES_FLAG_REQUIRED","VWO_GET_FLAG_VARIABLES_ERROR","useSetAttribute","setAttribute","attributeMap","Object","keys","info","VWO_SET_ATTRIBUTE_SUCCESS","attributes","VWO_SET_ATTRIBUTE_ERROR","VWO_SET_ATTRIBUTE_MAP_REQUIRED","VWO_SET_ATTRIBUTE","VWO_CLIENT_MISSING","useTrackEvent","trackEvent","eventName","eventProperties","VWO_TRACK_EVENT","Promise","resolve","isString","VWO_TRACK_EVENT_NAME_REQUIRED","VWO_TRACK_EVENT_ERROR","Error","message","useVWOClient","VWO_CLIENT"],"mappings":"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"}