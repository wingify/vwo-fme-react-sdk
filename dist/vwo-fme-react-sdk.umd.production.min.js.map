{"version":3,"file":"vwo-fme-react-sdk.umd.production.min.js","sources":["../lib/services/LoggerService.ts","../lib/enum/LogMessageEnum.ts","../lib/utils/LogMessageUtil.ts","../lib/enum/HookEnum.ts","../lib/VWOContext.ts","../lib/useVWOClient.ts","../lib/VWOProvider.tsx","../lib/useGetFlag.ts","../lib/useGetFlagVariable.ts","../lib/useSetAttribute.ts","../lib/useTrackEvent.ts"],"sourcesContent":["/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * logger.ts - Global Logger Singleton\n */\nimport { LogManager } from '@wingify/service-logger';\n\nlet logger: LogManager | null = null;\n\n/**\n * Initializes the global logger instance.\n * This function should be called inside `VWOProvider` before logging is used anywhere in the application.\n *\n * @param {object} config - The logger configuration object.\n * @param {object} config.logger - Optional logging configuration (e.g., log level, transports).\n * @returns {void} No return value; initializes the logger instance.\n */\nexport function initLogger(config: any) {\n  if (!logger) {\n    logger = new LogManager(config?.logger || {});\n  }\n  return logger;\n}\n\n/**\n * Retrieves the global logger instance.\n * Ensures that `initLogger` has been called before attempting to use logging.\n *\n * @returns {LogManager} The global logger instance.\n */\nexport function getLogger(): LogManager {\n  if (!logger) {\n    logger = new LogManager({ level: 'error' });\n  }\n  return logger;\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum LogMessageEnum {\n  // common messages\n  VWO_CLIENT_MISSING = 'VWO Client is missing in {hookName} hook. Ensure VWOProvider is correctly initialized.',\n  INVALID_CONTEXT = 'Invalid user context in {hookName} hook. Ensure a valid userContext is provided.',\n  HOOK_ERROR = 'Error in {hookName} hook: {error}',\n  INVALID_HOOK_USAGE = '{hookName} must be used within a VWOProvider !!',\n\n  // VWO Provider Messages\n  VWO_PROVIDER_CLIENT_CONFIG_WARNING = 'VWOProvider Warning: Both `client` and `config` are provided. The `client` prop will take precedence, and the `config` props will be disregarded.',\n  VWO_PROVIDER_CONFIG_REQUIRED = 'VWOProvider Error: Either `client` or `config` must be provided.',\n  VWO_SDK_INITIALIZATION_FAILED = 'VWO-SDK Initialization failed: {error}',\n\n  // useTrackEvent Messages\n  VWO_TRACK_EVENT_NAME_REQUIRED = 'Event name is required for useTrackEvent hook and it should be a string',\n  VWO_TRACK_EVENT_ERROR = 'Error tracking event - {eventName}: {error}',\n\n  // useSetAttribute Messages\n  VWO_SET_ATTRIBUTE_MAP_REQUIRED = 'attributeMap (object having key-value pairs of user attributes) is required for useSetAttribute hook',\n  VWO_SET_ATTRIBUTE_ERROR = 'Error setting attributes: {error}',\n  VWO_SET_ATTRIBUTE_SUCCESS = 'User attributes set: {attributes}',\n\n  // useGetFlag Messages\n  VWO_NOT_READY_IN_USE_GET_FLAG = 'VWO is not ready in useGetFlag hook',\n  VWO_GET_FLAG_FEATURE_KEY_REQUIRED = 'Feature key is required for useGetFlag hook',\n  VWO_GET_FLAG_ERROR = 'Error fetching feature flag - {featureKey}: {error}',\n\n  // useGetFlagVariable Messages\n  VWO_GET_FLAG_VARIABLES_FLAG_REQUIRED = 'Flag is required for useGetFlagVariables hook and should be an object',\n  VWO_GET_FLAG_VARIABLES_ERROR = 'Error getting flag variables: {error}',\n  VWO_GET_FLAG_VARIABLE_REQUIRED = 'Flag and variable key are required for useGetFlagVariable hook',\n  VWO_GET_FLAG_VARIABLE_ERROR = 'Error getting flag variable: {error}',\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isFunction } from '@wingify/util-data-type';\n\nconst nargs = /\\{([0-9a-zA-Z_]+)\\}/g;\n\n/**\n * Constructs a message by replacing placeholders in a template with corresponding values from a data object.\n *\n * @param {string} template - The message template containing placeholders in the format `{key}`.\n * @param {Record<string, any>} data - An object containing keys and values used to replace the placeholders in the template.\n * @returns {string} The constructed message with all placeholders replaced by their corresponding values from the data object.\n */\nexport function buildMessage(template: string, data: Record<string, any> = {}): string {\n  try {\n    return template.replace(nargs, (match, key, index) => {\n      // Check for escaped placeholders\n      if (template[index - 1] === '{' && template[index + match.length] === '}') {\n        return key;\n      }\n\n      // Retrieve the value from the data object\n      const value = data[key];\n\n      // If the key does not exist or the value is null/undefined, return an empty string\n      if (value === undefined || value === null) {\n        return '';\n      }\n\n      // If the value is a function, evaluate it\n      return isFunction(value) ? value() : value;\n    });\n  } catch (err) {\n    return template; // Return the original template in case of an error\n  }\n}\n\n/**\n * Logs an error message using the provided logger after building the message with template data.\n *\n * @param {any} logger - The logger instance used to log the error message.\n * @param {any} obj - An object containing data used to replace placeholders in the message template.\n * @param {string} message - The message template containing placeholders to be replaced with values from the obj parameter.\n */\nexport function logHookError(logger: any, obj: Record<string, any> = {}, message: string) {\n  try {\n    logger.error(buildMessage(message, obj));\n  } catch (error) {\n    console.error(`Error logging hook. Error: ${error}`);\n  }\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum HookEnum {\n  VWO_CLIENT = 'useVWOClient',\n  VWO_CONTEXT = 'useVWOContext',\n  VWO_GET_FLAG = 'useGetFlag',\n  VWO_GET_FLAG_VARIABLE = 'useGetFlagVariable',\n  VWO_GET_FLAG_VARIABLES = 'useGetFlagVariables',\n  VWO_TRACK_EVENT = 'useTrackEvent',\n  VWO_SET_ATTRIBUTE = 'useSetAttribute',\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContext, useContext } from 'react';\nimport { getLogger } from './services/LoggerService';\nimport { IVWOClient, IVWOContextModel } from 'vwo-fme-node-sdk';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage, logHookError } from './utils/LogMessageUtil';\nimport { HookEnum } from './enum/HookEnum';\ninterface VWOContextType {\n  vwoClient: IVWOClient | null;\n  userContext?: IVWOContextModel | null;\n  setUserContext?: (context: IVWOContextModel) => void;\n  isReady?: boolean;\n}\n\nexport const VWOContext = createContext<VWOContextType>({\n  vwoClient: null,\n  userContext: null,\n  setUserContext: undefined,\n  isReady: false,\n});\n\nexport const useVWOContext = (): VWOContextType | null => {\n  let logger;\n\n  try {\n    logger = getLogger();\n    // Fetch the context\n    const context = useContext(VWOContext);\n\n    // If the context is not found, throw an error\n    if (!context) {\n      logger.error(buildMessage(LogMessageEnum.INVALID_HOOK_USAGE, { hookName: HookEnum.VWO_CONTEXT }));\n      return null;\n    }\n    return context;\n  } catch (error) {\n    logHookError(logger, { error, hookName: HookEnum.VWO_CONTEXT }, LogMessageEnum.HOOK_ERROR);\n    return null;\n  }\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IVWOClient } from 'vwo-fme-node-sdk';\nimport { getLogger } from './services/LoggerService';\nimport { useVWOContext } from './VWOContext';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage, logHookError } from './utils/LogMessageUtil';\nimport { HookEnum } from './enum/HookEnum';\nconst defaultVwoClientResult: VWOClientResult = {\n  vwoClient: null,\n  isReady: false,\n};\n\nexport interface VWOClientResult {\n  vwoClient: IVWOClient | null;\n  isReady: boolean;\n}\n\n/**\n * Returns the VWO SDK client instance\n * @returns VWO SDK client instance\n */\nexport const useVWOClient = (): VWOClientResult => {\n  let logger;\n\n  try {\n    logger = getLogger();\n\n    const context = useVWOContext();\n\n    if (!context) {\n      logger.error(buildMessage(LogMessageEnum.INVALID_HOOK_USAGE, { hookName: HookEnum.VWO_CLIENT }));\n      return defaultVwoClientResult;\n    }\n\n    if (!context.isReady) {\n      return defaultVwoClientResult;\n    }\n\n    return {\n      vwoClient: context.vwoClient,\n      isReady: true,\n    };\n  } catch (error) {\n    logHookError(logger, { error, hookName: HookEnum.VWO_CLIENT }, LogMessageEnum.HOOK_ERROR);\n    return defaultVwoClientResult;\n  }\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState, ReactNode, useMemo } from 'react';\nimport { init, IVWOContextModel, IVWOClient, IVWOOptions } from 'vwo-fme-node-sdk';\nimport { VWOContext } from './VWOContext';\nimport { initLogger } from './services/LoggerService';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { logHookError } from './utils/LogMessageUtil';\n\nexport interface VWOProviderWithClient {\n  client: IVWOClient;\n  userContext?: IVWOContextModel;\n  children: ReactNode;\n  fallbackComponent?: ReactNode;\n}\n\nexport interface VWOProviderWithConfig {\n  config: IVWOOptions;\n  userContext?: IVWOContextModel;\n  children: ReactNode;\n  fallbackComponent?: ReactNode;\n}\n\nexport type IVWOProvider = VWOProviderWithClient | VWOProviderWithConfig;\n\n/**\n * VWOProvider component to provide VWO client and configuration context to child components.\n *\n * @param props - The props for the VWOProvider component.\n * @returns A React element that provides the VWO client and configuration context to child components.\n */\nexport function VWOProvider(props: IVWOProvider): React.ReactElement {\n  const { userContext, children, fallbackComponent } = props;\n\n  const client = 'client' in props ? props.client : null;\n  const config = 'config' in props ? props.config : null;\n\n  const [vwoClient, setVwoClient] = useState<IVWOClient | null>(client || null);\n  const [context, setContext] = useState<IVWOContextModel | null>(userContext || null);\n  const [isReady, setIsReady] = useState<boolean>(false);\n\n  const memoizedConfig = useMemo(() => config || client?.options, []);\n\n  let logger;\n  // Initialize the VWO SDK instance only once when the component mounts or if config is updated\n  useEffect(() => {\n    try {\n      logger = initLogger(client?.options || config);\n\n      if(config && vwoClient) {\n        logger.warn(LogMessageEnum.VWO_PROVIDER_CLIENT_CONFIG_WARNING);\n      }\n      if (vwoClient) {\n        setIsReady(true);\n        return;\n      } else if (!config) {\n        logger.error(LogMessageEnum.VWO_PROVIDER_CONFIG_REQUIRED);\n        return;\n      }\n\n      const initializeVWO = async () => {\n        if (!vwoClient && config) {\n          // Initialize the VWO SDK instance if vwoClient is not already initialized\n          const instance = await init(config);\n          setVwoClient(instance);\n          setIsReady(true);\n        }\n      };\n\n      // Initialized only once\n      if (!vwoClient && config) {\n        initializeVWO();\n      }\n    } catch (error) {\n      logHookError(logger, error, LogMessageEnum.VWO_SDK_INITIALIZATION_FAILED);\n    }\n  }, [memoizedConfig]); // Re-run only when config changes\n\n  return (\n    <VWOContext.Provider value={{ vwoClient, userContext: context, setUserContext: setContext, isReady }}>\n      {fallbackComponent && !isReady ? fallbackComponent : children}\n    </VWOContext.Provider>\n  );\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useVWOContext } from './VWOContext';\nimport { getLogger } from './services/LoggerService';\nimport { isObject } from '@wingify/util-data-type';\nimport { Flag, IVWOContextModel } from 'vwo-fme-node-sdk';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage, logHookError } from './utils/LogMessageUtil';\nimport { HookEnum } from './enum/HookEnum';\nexport interface IFlag {\n  flag: Flag;\n  isReady: boolean;\n}\n\nconst createDefaultFlag = () =>\n  ({\n    isEnabled: () => false,\n    getVariables: (): unknown[] => [],\n    getVariable: <T = unknown>(key: string, defaultValue?: T) => defaultValue,\n  }) as unknown as Flag;\n\n/**\n * Custom hook to retrieve a feature flag using VWO client.\n *\n * @param {string} featureKey - The key of the feature flag to retrieve.\n * @param {Object} [context] - Optional user context to use for fetching the flag.\n * @returns {FlagResult} An object containing the flag and a readiness status.\n */\nexport const useGetFlag = (featureKey: string, context?: IVWOContextModel): IFlag => {\n  const defaultFlagResult: IFlag = {\n    flag: createDefaultFlag(),\n    isReady: false,\n  };\n  const { vwoClient, userContext, setUserContext, isReady } = useVWOContext();\n  const [flag, setFlag] = useState<Flag>(defaultFlagResult.flag);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const logger = getLogger();\n\n  const stableUserContext = useMemo(() => {\n    return (context || userContext || {}) as IVWOContextModel;\n  }, [JSON.stringify(context || userContext || {})]);\n\n  const getFlag = useCallback(async () => {\n    try {\n      if (!isReady) {\n        logger.error(LogMessageEnum.VWO_NOT_READY_IN_USE_GET_FLAG);\n        return;\n      }\n\n      const result = await vwoClient.getFlag(featureKey, stableUserContext);\n      setFlag(result);\n\n      setUserContext(stableUserContext);\n    } catch (error) {\n      logHookError(logger, { error, featureKey }, LogMessageEnum.VWO_GET_FLAG_ERROR);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [featureKey, stableUserContext, isReady]);\n\n  useEffect(() => {\n    try {\n      if (!featureKey) {\n        logger.error(LogMessageEnum.VWO_GET_FLAG_FEATURE_KEY_REQUIRED);\n        return;\n      }\n\n      if (!isObject(stableUserContext) || !stableUserContext.id) {\n        logger.error(buildMessage(LogMessageEnum.INVALID_CONTEXT, { hookName: HookEnum.VWO_GET_FLAG }));\n        return;\n      }\n      // Check if all required dependencies are available\n      // stableUserContext && stableUserContext.id - check is added to handle the case where VWOProvider is not initialized\n      if (isReady && vwoClient && stableUserContext) {\n        getFlag();\n      }\n    } catch (error) {\n      logHookError(logger, { error, featureKey }, LogMessageEnum.VWO_GET_FLAG_ERROR);\n    }\n  }, [featureKey, JSON.stringify(stableUserContext), isReady]);\n\n  return {\n    flag,\n    isReady: !isLoading && !!flag,\n  };\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isObject } from '@wingify/util-data-type';\nimport { getLogger } from './services/LoggerService';\nimport { Flag } from 'vwo-fme-node-sdk';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { logHookError } from './utils/LogMessageUtil';\n\n/**\n * Hook to get all variables from a flag\n * @param flag - The flag to get the variables from\n * @returns The variables from the flag\n */\nexport const useGetFlagVariables = (flag: Flag): Array<Record<string, unknown>> => {\n  let logger;\n\n  try {\n    logger = getLogger();\n\n    if (!flag || !isObject(flag)) {\n      logger.error(LogMessageEnum.VWO_GET_FLAG_VARIABLES_FLAG_REQUIRED);\n      return [];\n    }\n\n    return flag.getVariables();\n  } catch (error) {\n    logHookError(logger, { error }, LogMessageEnum.VWO_GET_FLAG_VARIABLES_ERROR);\n    return [];\n  }\n};\n\n/**\n * Hook to get a flag variable\n * @param flag - The flag to get the variable from\n * @param variableKey - The key of the variable to get\n * @param defaultValue - The default value to return if the variable is not found\n * @returns The value of the variable\n */\nexport const useGetFlagVariable = <T>(flag: Flag, variableKey: string, defaultValue: T): T => {\n  let logger;\n\n  try {\n    logger = getLogger();\n    if (!flag || !isObject(flag)) {\n      return defaultValue;\n    }\n\n    if (!variableKey) {\n      logger.error(LogMessageEnum.VWO_GET_FLAG_VARIABLE_REQUIRED);\n      return defaultValue;\n    }\n\n    return flag.getVariable(variableKey, defaultValue);\n  } catch (error) {\n    logHookError(logger, { error }, LogMessageEnum.VWO_GET_FLAG_VARIABLE_ERROR);\n    return defaultValue;\n  }\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useVWOContext } from './VWOContext';\nimport { isObject } from '@wingify/util-data-type';\nimport { getLogger } from './services/LoggerService';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage, logHookError } from './utils/LogMessageUtil';\nimport { HookEnum } from './enum/HookEnum';\nimport { IVWOClient } from 'vwo-fme-node-sdk';\nimport { IVWOContextModel } from 'vwo-fme-node-sdk';\n\n/**\n * Interface for the return type of useSetAttribute hook\n */\nexport interface ISetAttribute {\n  setAttribute: (attributeMap: Record<string, string | number | boolean>) => void;\n  isReady: boolean;\n}\n\n/**\n * Hook to return a function for setting user attributes.\n * @returns {ISetAttribute} Object containing setAttribute function and isReady boolean\n */\nexport const useSetAttribute = (): ISetAttribute => {\n  let logger;\n  let vwoClient: IVWOClient;\n  let userContext: IVWOContextModel;\n  let isReady: boolean;\n\n  try {\n    logger = getLogger();\n\n    // Fetch the vwoClient and userContext from the context\n    ({ vwoClient, userContext, isReady } = useVWOContext());\n    \n  } catch (error) {\n    logHookError(logger, { error }, LogMessageEnum.VWO_SET_ATTRIBUTE_ERROR);\n    return { setAttribute: () => {}, isReady: false };\n  }\n  /**\n   * Function to set user attributes dynamically\n   * @param attributeMap - The map of attributes to set\n   */\n  const setAttribute = (attributeMap: Record<string, string | number | boolean>): void => {\n    try {\n      // Return a no-op function if vwoClient or userContext is not available\n      if (!isReady) {\n        logger.error(buildMessage(LogMessageEnum.VWO_CLIENT_MISSING, { hookName: HookEnum.VWO_SET_ATTRIBUTE }));\n        return;\n      }\n      if (!userContext || !isObject(userContext) || !userContext.id) {\n        logger.error(buildMessage(LogMessageEnum.INVALID_CONTEXT, { hookName: HookEnum.VWO_SET_ATTRIBUTE }));\n        return;\n      }\n      if (!attributeMap || !isObject(attributeMap) || Object.keys(attributeMap).length === 0) {\n        logger.error(LogMessageEnum.VWO_SET_ATTRIBUTE_MAP_REQUIRED);\n        return;\n      }\n\n      vwoClient.setAttribute(attributeMap, userContext); // Set the attributes\n\n      logger.info(\n        buildMessage(LogMessageEnum.VWO_SET_ATTRIBUTE_SUCCESS, {\n          attributes: JSON.stringify(attributeMap),\n        }),\n      );\n    } catch (error) {\n      logHookError(logger, { error }, LogMessageEnum.VWO_SET_ATTRIBUTE_ERROR);\n    }\n  };\n\n  return { setAttribute, isReady };\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getLogger } from './services/LoggerService';\nimport { useVWOContext } from './VWOContext';\nimport { isObject, isString } from '@wingify/util-data-type';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage, logHookError } from './utils/LogMessageUtil';\nimport { HookEnum } from './enum/HookEnum';\nimport { IVWOClient, IVWOContextModel } from 'vwo-fme-node-sdk';\n/**\n * Interface for the return type of useTrackEvent hook\n */\nexport interface ITrackEvent {\n  trackEvent: (\n    eventName: string,\n    eventProperties?: Record<string, string | number | boolean>,\n  ) => Promise<Record<string, boolean>>;\n  isReady: boolean;\n}\n\n/**\n * Hook to provide the trackEvent function for tracking events.\n * @returns {ITrackEvent} Object containing trackEvent function and isReady boolean\n */\nexport const useTrackEvent = (): ITrackEvent => {\n  let logger;\n  let vwoClient: IVWOClient;\n  let userContext: IVWOContextModel;\n  let isReady: boolean;\n\n  try {\n    logger = getLogger();\n\n    // Fetch the vwoClient and userContext from the context\n    ({ vwoClient, userContext, isReady } = useVWOContext());\n  } catch (error) {\n    logHookError(logger, { error }, LogMessageEnum.VWO_TRACK_EVENT_ERROR);\n    return { trackEvent: () => Promise.resolve({}), isReady: false };\n  }\n  /**\n   * trackEvent function to be returned by the hook\n   * @param eventName - The name of the event to track\n   * @param eventProperties - The properties of the event (optional)\n   */\n  const trackEvent = async (\n    eventName: string,\n    eventProperties: Record<string, string | number | boolean> = {},\n  ): Promise<Record<string, boolean>> => {\n    try {\n      if (!isReady) {\n        logger.error(buildMessage(LogMessageEnum.VWO_CLIENT_MISSING, { hookName: HookEnum.VWO_TRACK_EVENT }));\n        return Promise.resolve({});\n      }\n      if (!eventName || !isString(eventName)) {\n        logger.error(LogMessageEnum.VWO_TRACK_EVENT_NAME_REQUIRED);\n        return Promise.resolve({});\n      }\n\n      // Ensure userContext is valid\n      if (!userContext || !isObject(userContext) || !userContext.id) {\n        logger.error(buildMessage(LogMessageEnum.INVALID_CONTEXT, { hookName: HookEnum.VWO_TRACK_EVENT }));\n        return Promise.resolve({});\n      }\n\n      return await vwoClient.trackEvent(eventName, userContext, eventProperties);\n    } catch (error) {\n      logHookError(\n        logger,\n        { error: error instanceof Error ? error.message : error, eventName },\n        LogMessageEnum.VWO_TRACK_EVENT_ERROR,\n      );\n      return Promise.resolve({});\n    }\n  };\n\n  return { trackEvent, isReady };\n};\n"],"names":["logger","initLogger","config","LogManager","getLogger","level","LogMessageEnum","nargs","buildMessage","template","data","replace","match","key","index","length","value","isFunction","err","logHookError","obj","message","error","console","HookEnum","VWOContext","createContext","vwoClient","userContext","setUserContext","undefined","isReady","useVWOContext","useContext","INVALID_HOOK_USAGE","hookName","VWO_CONTEXT","HOOK_ERROR","defaultVwoClientResult","props","children","fallbackComponent","client","setVwoClient","useState","context","setContext","setIsReady","memoizedConfig","useMemo","options","useEffect","warn","VWO_PROVIDER_CLIENT_CONFIG_WARNING","VWO_PROVIDER_CONFIG_REQUIRED","initializeVWO","async","instance","init","VWO_SDK_INITIALIZATION_FAILED","React","Provider","useGetFlag","featureKey","flag","setFlag","isEnabled","getVariables","getVariable","defaultValue","isLoading","setIsLoading","stableUserContext","JSON","stringify","getFlag","useCallback","VWO_NOT_READY_IN_USE_GET_FLAG","result","VWO_GET_FLAG_ERROR","VWO_GET_FLAG_FEATURE_KEY_REQUIRED","isObject","id","INVALID_CONTEXT","VWO_GET_FLAG","useGetFlagVariable","variableKey","VWO_GET_FLAG_VARIABLE_REQUIRED","VWO_GET_FLAG_VARIABLE_ERROR","VWO_GET_FLAG_VARIABLES_FLAG_REQUIRED","VWO_GET_FLAG_VARIABLES_ERROR","useSetAttribute","VWO_SET_ATTRIBUTE_ERROR","setAttribute","attributeMap","VWO_CLIENT_MISSING","VWO_SET_ATTRIBUTE","Object","keys","VWO_SET_ATTRIBUTE_MAP_REQUIRED","info","VWO_SET_ATTRIBUTE_SUCCESS","attributes","useTrackEvent","VWO_TRACK_EVENT_ERROR","trackEvent","Promise","resolve","eventName","eventProperties","isString","VWO_TRACK_EVENT","VWO_TRACK_EVENT_NAME_REQUIRED","Error","useVWOClient","VWO_CLIENT"],"mappings":"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"}